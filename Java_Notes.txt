> Software is collection various programs.
  Types of Software :

  > System Software : 
     - This software used to develope functions of hardware devices.
     - Prog. Lang -> Assembly Lang., C Lang.

  > Application Software : 
    - This s/w is used to develop organization oriented application or to solve specific use cases.
    
    -> Standalone Application        
    -> Distributed Application
  
  Internet/Web Software
    -> This s/w is used to develope organization oriented problems in a distributed manner.

History Of Java :
    - Team in Sun Microsystem started working on Java language dev. to solve the consumer devices problems.
    - Java development has started in 1990
    - James Gosling(Founder/Father Of Java) lead this Java Devlopment team.
    - Initially Java named as OAK Language.
    - In 1995 they have renames to Java.
    - When Java initially released they have released in three flavours.
           - J2SE(Java 2 Standard Edition)
             - It is used mainly for devloping Standalone application.

           - J2EE(Java 2 Enterprise Edition)
             - It is mainly used for devloping Web Based application.

           - J2ME(Java 2 Micro/Mobile Edition)
             - It is mainly used for devloping Mobile OS and it's related application
Tech Version       s/w version                Performance Comparison
====================================================================
Java              JDK 1.0 & JDK 1.1           Tortoise
Java 2            JDK 1.2                     Dog 
                  JDK 1.3 & JDK 1.4           Horse
Java 5            JDK 1.5                     Tiger
                  JDK 1.6                     Mustang

* Features of Java :- 
          1. Simple
          2. Platform Independent
          3. Architectural Neutral
          4. Portable
          5. Multithreaded
          6. Networked
          7. Distributed
          8. High Performance
          9. Robust
          10. Dynamic
          11. Interpreted
          12. Secured
          13. OOPL 

  1. Simple :-
        Java is one of the simple programming language because of the following points.
              - Java programming doesn't support a complex concept called pointers.
              - Java introduced concept of byte code.

              Q. Define bytecode & JVM?
                ByteCode : ByteCode is the set of optimised instructions generated during compilation phase & it is more powerful than ordinary pointer code.
                JVM : JVM is set of programs developed by Sun Microsytems & supplied as a part of jdk for reading line by line of byte code & convert into native understanding form of OS.

                * Java language is one of the compiled & interpreted programming language.
              
              - Memory Allocation:
                   Java programming execution environment contain inbuilt garbage collection program for automatic memory management for strenghning the performance of Java/J2EE applications.
              
              Q. Define Garbage Collector.
              => Garbage Collector is one of the background system java program which is running internally along with our regular Java program for collecting unused/unreferenced memory space for improving the performance of our applications.

                 
  2. Platform Independent :-
     A platform independent technology/language related applications run on every OS, without considering their vendors.
     In order to say particular language is platform independent if and only if it has to satisfy the following properties.
       - The language must have data types & they must take same amount of memory space.
       - The language must contain some special internal programs which will convert from one format of one OS to another format of another OS.
     The languages like c, c++ are treated as platform dependent whereas Java language is treated as platform independent language.
      
      - 1 byte = 8 bits
      

  3. Architectural Neutral :
     An application is said to be architectural neutral if and only if the application runs on every processor without considering their architectures and vendors(providors).
     A language is said to be architectural neutral, it has to satisfy the following property.
     - The s/w must have the special internal programs which will convert the factors of one processor to factors of another processor.
     - The language like Java is one of the architectural neutral language because it satisfies the above property.
     - The basic aim of Sun microsystem is that Java applications must run without considering about software benchmarks and hardware benchmarks.

  4. Portable : 
     A portable is one which will run on every operating system and one every processor without considering their vendors and architectures.
     Tha applications of c, c++, pascal etc. are treated as non portable applications.
     All the Java applications are treated as portable applications.

     According to Sun Microsystem :

          Portability = Platform Independent + Architectural Neutral
  
  5. Multithreaded :
      Performing multiple tasks at a time is know as multitasking.
      Multitasking happen on Process or in the system program.

      - Multithreading is one of the distinct facility of Java programming.
      - The basic aim of multithreading is that to achieve concurrent execution.
      - A flow of control is know as thread. 
      - A basic use of thread is to excute user/programmer defined functions.
      - Java Program :
          Foreground/Child thread
          Background/Parent thread
      - Multitasking is one of the specialized form of OS.
      In java programming multithreading applications are developed by following :
         1. java.lang.Thread (Class)
         2. java.lang.Runnable (Interface)
      - A foreground thread is one which always executes logic of the java program or user/programmer defined methods of Java.
      - A Background thread is one which always monitors executor status of the forground threads.\
  
  6. Networked :
     The basic aim of networking is to share the data between multiple machines which are located either in the same network (local sharing) or in different network(global sharing).
     Collection of interconnected autonoumous/non autonoumous computers with the server is know as networking.
     According to industry standards two types of networks are there :
       -  Untrusted Network
            An untrusted network is one in which their exists collection of interconnected non automnoumous computers with the server.
      -  Trusted Network
          Trusted network is one in which there exist collection of interconnected automnoumous computers with the servers.
          
  7. Distributed : 
      According to the industry standards, in Java realtime applications.
      Applications are classifieds into two types they are :
         1. Centralized Applications
         2. Distributed Applications

      Java has it's own package for deveoping networking related applications i.e java.net.*;

    Q. What is the difference between URL(Uniform Resource Locater) & URI (Uniform Resource Identifier).
      - The place or address where the application is running is known as URL.
      - The place/address where the application is residing is know as URI.
  
  8. High Performance :
      Java is one of the high perfromance programming language because of the following reasons.
      - Because of magic of bytecode 
      - Because of magic of garbage collector, automatic memory management is taken care.
      - Java programming is free from pointers.
  
  9. Robust : 
     - Java is known as Robust as it is capable of handling run-time errors, supports automatic garbage collection & exception handling & memory management.
       Below class & interface is used for the exception handling.
        - java.lang.Exception (Class)
        - java.lang.Throwable (Interface)
     - Due to runtime exception handling java program doesn't terminate in between the execution. If any exception occurs at runtime it will handled and the program execution continued.

  10. Dynamic :
      - In most of the programming language, memory allocation technicques are divided into two types they are :
            1. Static Memory Allocation :
              - A static memory allocation is one in which the mermory will be allocated at compile time.
              - The limitations of static memory allocations are:
                 1. Waste of memory space.
                 2. loss of data 
                 3. Overlapping of existing data.

            2. Dynamic Memory Allocation
              - A Dynamic memory allocation is one in which the memory will allocated at runtime time on need basis.
              - Dynamic memory allocation overcomes the limitation of static memory allocatino.
              - In java for allocating memory dynamically we use operator called "new".
  
  11. Interpreted :
      In older versions of Java compilation phase is so faster than interpretation phase.
      Industry has complained to the Sun Microsystem saying that compilation phase is very faster and interpretation phase is very slow.
      To solve this issue sun microsystem has developed a program called JIT(Just In Time Compiler) and added as part of JVM to speed up the interpreation phase.
      In the current version of Java interpretation phase is so faster than compilation phase.
      Hence Java is one of the highly interpreted programming language.
  
    :\> javac App.java                        --> javac is Java compiler
      -> above step will generate App.class
    :\> java App              ---> java is Java interpreter

    Q. Define JIT.
    -> JIT is set of programs developed by Sun Microsystem and added as feature to JVM to speed up the interpretation phase by reading the entire section of the bytecode and converting it to native understanding for of OS.

  12. Secured :
        - No Explicit Pointer
        - Java programs run inside a virtual machine. (JVM)
        - Classloader
           Classloader in Java is a part of the Java Runtime Environment(JRE) which is used to load Java Classes into the Java Virtual Machine(JVM) dynamically. It adds security by separating the package for the class of the local file system from those that are imported from network sources.
        - Byte Code Verifier : 
             It checks the code fragments for illegal code that can violate access rights to objects.
        - Security Manager : 
            It determines what resources a class can access such as reading and writing to the local disk.
  
  13. OOPL (Object Oriented Programming language) :-
      
      1. Procedure Oriented prog. Lang. 
          e.g. c, pascal, cobol, ada 
      
      2. Object Oriented Prog. Lang
         e.g. Small Talk, Lisp, Object Pascal, Object COBOL, C++, Java, .Network
           C++ is partial object oriented. 
            - Every C++ program can be written like c prog.
            - 50% of OOPS principles not satisfied.
            - Friend Function
            

      * Fundamental Datatypes in Java :
        In Java programming we have 8 fundamental datatypes which are categorised into 4 categories or groups they are:
         
           1. Integer Category Datatypes
           2. Float
           3. Character
           4. Boolean

        1. Integer Category Datatype:
            This category datatypes are used for storing integer data in the main memory of the computer by allocating sufficient amount of memory space.
            In other words this category datatypes are used for representing whole numbers in the memory fo the computer.
            Integer category datatypes are divided into 4 types:
            
            S.no      Datatype      Size        Range   
          ======================================================  
            1.        byte           1 byte     -128 to +127
            2.        short          2 byte     -32,768 to +32,767
            3.        int            4 byte     -2,147,483,648 to +2,147,483,647
            4.        long           8 byte     -9,223,372,036,854,775,808 to +9,223,372,036,854,775,807
        
        2. Float Category Datatype:
           A float data or real data is one which is represented in the form of scale , precision.

            e.g.  xxx.yyy
            here xxx is called scale yyy is called precision.

          In order to represent float data or real data in the main memory of the computer we use the float category data types.
          Float category data types are divided into 2 types 

          Sno.        Data Type       Size      Range     No. Of Dec places
        =====================================================================
          1.          float           4 byte                  6
          2.          double          8 byte                  14
               
        3. Character Category Datatype :
           - The range of char datatype is 0 to 65535.
           - The default value is '\u0000' and that is the lowest range of Unicode.
           - The default size(as mentioned above) 2 bytes because Java uses the Unicode system and not the ASCII code system.
           e.g. char a = 'A';
                char a;

        4. Boolean Category Datatype : 
           - Boolean Category Datatypes is used for representing or storing logical values i.e. true or false.
           - In Java programming to represent boolean values or logical values we use a datatype called "boolean".
           - boolean datatypes takes zero byte of main memory space becuase boolean datatype of java implemented by SUN microsystem with a concepts of flip-flops.
           - A flip-flop is a general purpose register which stores one bit of information (one(1)) -> true or zero (0)  -> false)

           Note :- In c or c++ boolean datatype is not available for representing true or false values but a true value can be treated as non-zero and false values can be represented by zero.
           
        Default Value for primitive Data Type :-
        ==============================================
        Datatype            Size
        ==============================================
        byte                0
        short               0
        int                 0
        long                0
        float               0.0
        double              0.0
        char                '\u000'
        boolean             false
    
    Variable in Java :-
    ===================
     - If we enter any input to the program then the input must be stored in the main memory of the computer in terms of variables.
     - Without variables concept one can't represent or store the input of the user in the main memory of the computer. 
     - Variables are also know as building blocks of the programming language.

     Definition :- 
              Variable is an identifier whose value is changing during execution of the program.

    Rules :-
      - When we write some Java applications we may use collection of variables. When we are using variables in Java the Java progammer is highly recommended to use the following rules.
        - The first letter of the variable must be an alphabet.
        - The lenght of the variable in Java can be allowed upto 32 characters.
        - No special symbols are allowed except underscore(_) and $.
        - No special keywords/reserved words are allowed as variable.

    * Variable Declaration :-
      - The process of allocating Sufficient amount of memory space along with a variable name in the main memory of computer is know as variable declaration.
      - Before using any variable in Java that variable must be declared.

        Syntax :- 
                 datatype v1,v2,v3,....vn;
        Here datatype represents either fundamental or derived or user defined datatype.
        v1,v2,....vn represents valid variable names of Java.

        e.g : 
             int a,b,C;
             float f1,f2,f3;
             char c1,c2,c3;
             boolean b1,b2;

      Let us consider the following statement

        int a;

      When the above statement is executed then the system will perform the following actions 

       1. We get suffiecient memory space depends upon data type.
          a is of type integer so it will get 4 bytes of memory allocation.
       2. Whatever memory space is created in above statement the memory space is qualified by variable name a.
       3. Each and every variable in Java must have a distinct or unique address. Address is for system to process the value and variable is for the programmer to access the value.
       4. Memory is one of the essential components, the system will place default values depends on the datatypes. 
        
    * Initialization of variables :-
      - The process of placing programmer defined value within the variable without placing default value is known as initialization of a variable.
      -  Whenever we decided to place predecided values in the variables then we must choose the concept of initialization.

      Syntaxt : 
                datatype v1 = value1, v2 = value2,.....vn = valuen;
            
        - val1, val2,....,valn represents list of predecided values placing in the variables v1,v2,...,vn respectively.
          e.g. 
              float PI = 3.14f;
              int a = 10, b = 20;

        
    * Constants in Java : "final" keyword.
       - If we don't want to change the value of the variable then those variable values must be made as constants.
       - Definition Of Constant : 
                                 A constant is an identifier who's values can't be changed during execution of the program.
       - In Java programming to make anything as constant we use a keyword "final".
       - final is a keyword which is playing an important role in Java at three places they are :
     
      1. final at Variable Level :
          - If we don't want to change the value of the variables then the variable value must be made as final. 
          - In other words if want to make any variable value as a constant then that variable value must be made as final.

          Syntax : -
                     final datatype v1 = val1, v2 = val2,...,vn = valn;

          e.g : 
                     final float PI = 3.14f;
                                 PI = PI + 1; // invalid
                                 
          - once the variable value is final whose value can't be changed.
      
      2. final at Method Level : 
          - We know that each and every operations of our programming languages must be performed with respect to functions/methods.
          - If we don't want to change the definition of the method then the method definition must be made as constant by using final keyword.
          - If anothe words whenever we develop anothe method which is common for many number of Java programmers then such methods are highly recommended to make them as final.

            Syntax :-
                      final returntype methodName (list of final params if any)
                      {
                        //block of statement
                      }

            e.g. :-
                    final float simpleInterest(float p, float t, float r){
                      float = si = p * i * r;
                      return si;
                    }
          - Once the method is final it is not possible to redefine or override.
          
                      
      3. final at Class Level
          - If we don't want to give the features of base class to the derived class, then the base class definition must be made as final.

          Syntax : 
                   final class <class name>{

                   }

          e.g. 
                  final class Personal {

                  }
                  class others extends Personal //invalid
                  {

                  }
          Once the class is final whose properties will not be inherited from base class to derived class.
          Final class is never participated in inheritance process.




         
        

    * Object Oriented Programming contains 8 principles they are :
    
    1. Classes
    2. objects
    3. Data Abstraction
    4. Data Encapsulation
    5. Inheritance
    6. Polymorphism
    7. Dynamic Binding
    8. Message Passing

    1. Classes :- 
          - Class concept is always used for developing user/programmer defined datatypes.
          - To develop the class in java we use a keyword "class".
          - Without class concept there is no Java Program.

        Definition :
             The process of binding the data members and associated methods in Single Unit. This single unit is known as class.
          
            - The data members of the class are also known as attributes or properties.
            - The methods of the class are also know as behviours or accessories or member function.

        - In object oriented programming lang. we have 2 categories of methods :
           1. Member methods :
              A member method is one which is available within the scope of the class and it can access the data of the class.

           2. Non Member methods:
              A non member method is one which is not available within the scope of the class and it can not access the data members of the class.